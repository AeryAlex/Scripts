local function clientsidedchat(message)
	local player = game.Players.LocalPlayer

	local character = player.Character or player.CharacterAdded:Wait()

	local messagecharacter = message

	game:GetService("Chat"):Chat(character:FindFirstChild("Head"), messagecharacter, Enum.ChatColor.Blue)
end

local function fechat(message)
	game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(message, "All")
end

local function ufwchat(message)
	local v22808 = require(game.ReplicatedStorage.Resources.UFW.TekrinnDialogue)
	local imageLabel = game.ReplicatedStorage.Resources.UFW.TekrinnDialogue.KJDialogue.Holder.Template.ImageLabel
	local targetImageID = "rbxassetid://17372119511"
	local newImageID = "rbxassetid://118885317814535"

	if imageLabel.Image == targetImageID then
		imageLabel.Image = newImageID
	end

	local v22811 = {
		{
			Text = message,
			Color = ColorSequence.new({
				ColorSequenceKeypoint.new(0, Color3.fromRGB(0, 0, 0)),
				ColorSequenceKeypoint.new(0.5, Color3.fromRGB(255, 17, 17)),
				ColorSequenceKeypoint.new(1, Color3.fromRGB(255, 255, 255))
			}),
			TextStrokeColor = Color3.new(0, 0, 0),
			Bold = false,
			Italic = false,
			Shake = {
				Enabled = false,
				Intensity = 1,
				Lifetime = 2
			},
			TypeSpeed = 0.06
		}
	}

	v22808.Speak(game.Players.LocalPlayer.Character, v22811)
end

local function cooldownGive(MoveName, Cooldowna)
	local Event = gameGetService(ReplicatedStorage).Replication

	firesignal(Event.OnClientEvent, 
		{
			Cooldown = Cooldowna,
			Name = MoveName,
			Effect = "Cooldown"
		}
	)

end

local function GroundCrater(sz)

	local humanoidrp = game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart")

	local Event = game:GetService("ReplicatedStorage").Replication
	firesignal(Event.OnClientEvent, 
		{
			["end"] = Vector3.new(0, -14, 0),
			start = Vector3.new(humanoidrp.Position.X, humanoidrp.Position.Y, humanoidrp.Position.Z),
			Effect = "Ground Crater",
			Seed = math.random(1, 214748647),
			size = sz
		}
	)

end

local function DebrisLine(spread, time)
	local player = game.Players.LocalPlayer
	local character = player.Character or player.CharacterAdded:Wait()
	local root = character:WaitForChild("HumanoidRootPart")
	local camera = workspace.CurrentCamera

	local Event = game:GetService("ReplicatedStorage").Replication

	local position = Vector3.new(root.Position.X, root.Position.Y, root.Position.Z)

	local lookVector = camera.CFrame.LookVector
	local flatLookVector = Vector3.new(lookVector.X, 0, lookVector.Z).Unit

	local newCFrame = CFrame.new(position, position + flatLookVector)

	firesignal(Event.OnClientEvent, 
		{
			Effect = "Debris Line",
			CFrame = newCFrame,
			Spread = spread,
			Times = time
		}
	)

end
local function raycast(params)
	local origin = params.origin
	local direction = params.direction
	local distance = params.distance or 5
	local radius = params.radius or 0
	local ignoreList = params.ignoreList or {}

	local rayParams = RaycastParams.new()
	rayParams.FilterType = Enum.RaycastFilterType.Blacklist
	rayParams.FilterDescendantsInstances = ignoreList
	rayParams.IgnoreWater = true

	local overlapParams = OverlapParams.new()
	overlapParams.FilterType = Enum.RaycastFilterType.Blacklist
	overlapParams.FilterDescendantsInstances = ignoreList

	local raycastResult = workspace:Raycast(origin, direction.Unit * distance, rayParams)
	local targetPosition = raycastResult and raycastResult.Position or (origin + direction.Unit * distance)
	local partsInRadius = workspace:GetPartBoundsInRadius(targetPosition, radius, overlapParams)

	for _, part in ipairs(partsInRadius) do
		local humanoid = part.Parent:FindFirstChild("Humanoid")
		if humanoid and humanoid.Health > 0 then
			return {
				Instance = part,
				Humanoid = humanoid,
				Position = targetPosition
			}
		end
	end

	return nil
end

local player = game.Players.LocalPlayer
local screenGui = player:WaitForChild("PlayerGui"):FindFirstChild("ScreenGui") or Instance.new("ScreenGui")
screenGui.Name = "ScreenGui"
screenGui.Parent = player.PlayerGui

local TweenService = game:GetService("TweenService")

local function createLabel(text, positionYScale)
	local textLabel = Instance.new("TextLabel")
	textLabel.Parent = screenGui

	textLabel.Text = text
	textLabel.Font = Enum.Font.Arcade
	textLabel.TextSize = 35
	textLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
	textLabel.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
	textLabel.TextStrokeTransparency = 0
	textLabel.TextWrapped = true
	textLabel.TextScaled = true
	textLabel.TextXAlignment = Enum.TextXAlignment.Center
	textLabel.TextYAlignment = Enum.TextYAlignment.Center

	textLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	textLabel.BackgroundTransparency = 0.75
	textLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
	textLabel.BorderSizePixel = 2

	textLabel.Position = UDim2.new(0.5, 0, positionYScale, 0)
	textLabel.Size = UDim2.new(1, 0, 0.08, 0)
	textLabel.AnchorPoint = Vector2.new(0.5, 0.5)

	textLabel.Visible = true
	textLabel.ZIndex = 500
	textLabel.Name = "CustomTextLabel"

	local success, _ = pcall(function()
		textLabel.Modal = true
	end)

	task.delay(5, function()
		local tweenInfo = TweenInfo.new(1.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
		local tween = TweenService:Create(textLabel, tweenInfo, {
			TextTransparency = 1,
			TextStrokeTransparency = 1,
			BackgroundTransparency = 1
		})
		tween:Play()
		tween.Completed:Wait()
		textLabel:Destroy()
	end)

	return textLabel
end

createLabel("this script is made by alex!!! more scripts in discord.gg/YE4CrGVeW8", 0.1)
createLabel("uhh worship alex and bye..", 0.18)

local p = game.Players.LocalPlayer
local g = p.PlayerGui
local h = g:FindFirstChild("Hotbar")
local b = h:FindFirstChild("Backpack")
local f = b:FindFirstChild("Hotbar")
local btn1 = f:FindFirstChild("1").Base
btn1.ToolName.Text = "RENAME ME" -- 1st move

local btn2 = f:FindFirstChild("2").Base
btn2.ToolName.Text = "RENAME ME" -- 2nd move

local btn3 = f:FindFirstChild("3").Base
btn3.ToolName.Text = "RENAME ME" --3rd move

local btn4 = f:FindFirstChild("4").Base
btn4.ToolName.Text = "RENAME ME" --4th move

local Players = game:GetService("Players")

local player = Players.LocalPlayer

local playerGui = player:WaitForChild("PlayerGui")


local function findGuiAndSetText()
	local screenGui = playerGui:FindFirstChild("Bar")

	if screenGui then

		local magicHealthFrame = screenGui:FindFirstChild("MagicHealth")

		if magicHealthFrame then

			local textLabel = magicHealthFrame:FindFirstChild("TextLabel")
			local bar = magicHealthFrame.Health:FindFirstChild("Bar").Bar

			if textLabel and bar then
				textLabel.Text = "RENAME ULTIMATE NAME/ COLOR"
				bar.ImageColor3 = Color3.fromRGB(0, 255, 255)
			end
		end
	end
end

--[[
playerGui.DescendantAdded:Connect(findGuiAndSetText)
]]
findGuiAndSetText()
--1st move
local animationId = 10468665991

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")

local function onAnimationPlayed(animationTrack)
	if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then
		local hit = raycast({
			origin = character.HumanoidRootPart.Position,
			direction = character.HumanoidRootPart.CFrame.LookVector,
			distance = 5,
			radius = 0,
			ignoreList = {character}
		})

		if hit 
			and hit.Instance 
			and hit.Instance.Parent 
			and hit.Instance.Parent:FindFirstChild("Humanoid") 
			and hit.Instance.Parent.Humanoid.Health <= 30 then

			local targetHumanoid = hit.Instance.Parent.Humanoid


		else

			for _, animTrack in pairs(humanoid:GetPlayingAnimationTracks()) do
				animTrack:Stop()
			end

			local anim = Instance.new("Animation")
			anim.AnimationId = "rbxassetid://15020965094"
			local playAnim = humanoid:LoadAnimation(anim)
			playAnim:Play()
			playAnim:AdjustSpeed(3)

			task.wait(0.1)
			local soundeffect = Instance.new("Sound")
			soundeffect.SoundId = "rbxassetid://6650592166"
			soundeffect.Parent = character:WaitForChild("Torso")
			soundeffect.Volume = 7
			soundeffect.TimePosition = 2.2
			soundeffect:Play()
		end
	end
end

humanoid.AnimationPlayed:Connect(onAnimationPlayed)


--2nd move
local animationId = 10466974800
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")

local function onAnimationPlayed(animationTrack)
	if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then
		local hit = raycast({
			origin = character.HumanoidRootPart.Position,
			direction = character.HumanoidRootPart.CFrame.LookVector,
			distance = 5,
			radius = 0,
			ignoreList = {character}
		})
		if hit 
			and hit.Instance 
			and hit.Instance.Parent 
			and hit.Instance.Parent:FindFirstChild("Humanoid") 
			and hit.Instance.Parent.Humanoid.Health <= 30 then

			local targetHumanoid = hit.Instance.Parent.Humanoid


		else

			for _, animTrack in pairs(humanoid:GetPlayingAnimationTracks()) do
				animTrack:Stop()
			end

			local AnimAnim = Instance.new("Animation")
			AnimAnim.AnimationId = "rbxassetid://13560306510"
			local Anim = humanoid:LoadAnimation(AnimAnim)

			local startTime = 0
			Anim:Play()
			Anim:AdjustSpeed(0)
			Anim.TimePosition = startTime
			Anim:AdjustSpeed(2.5)

			local soundeffect = Instance.new("Sound")
			soundeffect.SoundId = "YourID"
			soundeffect.Parent = character.Torso
			soundeffect:Play()
			soundeffect.Volume = 3

			task.wait(0.28)
			local soundeffect2 = Instance.new("Sound")
			soundeffect2.SoundId = "YourID"
			soundeffect2.Parent = character.Torso
			soundeffect2:Play()
			soundeffect2.Volume = 3
		end
	end
end

humanoid.AnimationPlayed:Connect(onAnimationPlayed)


--3rd move
local animationId = 10471336737

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")

local function onAnimationPlayed(animationTrack)
	if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then
		local hit = raycast({
			origin = character.HumanoidRootPart.Position,
			direction = character.HumanoidRootPart.CFrame.LookVector,
			distance = 5,
			radius = 0,
			ignoreList = {character}
		})
		if hit 
			and hit.Instance 
			and hit.Instance.Parent 
			and hit.Instance.Parent:FindFirstChild("Humanoid") 
			and hit.Instance.Parent.Humanoid.Health <= 30 then

			local targetHumanoid = hit.Instance.Parent.Humanoid


		else

			for _, animTrack in pairs(humanoid:GetPlayingAnimationTracks()) do
				animTrack:Stop()
			end

			local AnimAnim = Instance.new("Animation")
			AnimAnim.AnimationId = "rbxassetid://13071982935"
			local Anim = humanoid:LoadAnimation(AnimAnim)

			local startTime = 3.8
			Anim:Play()
			Anim:AdjustSpeed(0)
			Anim.TimePosition = startTime
			Anim:AdjustSpeed(1)

			local soundeffect = Instance.new("Sound")
			soundeffect.SoundId = "rbxassetid://YOURSOUNDID"
			soundeffect.Parent = character.Torso
			soundeffect:Play()
			soundeffect.Volume = 3
			soundeffect.TimePosition = 0.4

			local soundeffect2 = Instance.new("Sound")
			soundeffect2.SoundId = "rbxassetid://YOURSOUNDID"
			soundeffect2.Parent = character.Torso
			soundeffect2:Play()
			soundeffect2.Volume = 3
			soundeffect2.TimePosition = 0.1
		end
	end
end

humanoid.AnimationPlayed:Connect(onAnimationPlayed)


--4th move
local animationId = 12510170988

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")

local function onAnimationPlayed(animationTrack)
	if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then
		local hit = raycast({
			origin = character.HumanoidRootPart.Position,
			direction = character.HumanoidRootPart.CFrame.LookVector,
			distance = 5,
			radius = 0,
			ignoreList = {character}
		})
		if hit 
			and hit.Instance 
			and hit.Instance.Parent 
			and hit.Instance.Parent:FindFirstChild("Humanoid") 
			and hit.Instance.Parent.Humanoid.Health <= 30 then

			local targetHumanoid = hit.Instance.Parent.Humanoid

		else

			for _, animTrack in pairs(humanoid:GetPlayingAnimationTracks()) do
				animTrack:Stop()
			end

			local AnimAnim = Instance.new("Animation")
			AnimAnim.AnimationId = "rbxassetid://15125307874"
			local Anim = humanoid:LoadAnimation(AnimAnim)

			local startTime = 2
			Anim:Play()
			Anim:AdjustSpeed(0)
			Anim.TimePosition = startTime
			Anim:AdjustSpeed(1)

		end
	end
end

humanoid.AnimationPlayed:Connect(onAnimationPlayed)


--Ultimate
local animationId = 12447707844


local player = game.Players.LocalPlayer

local character = player.Character or player.CharacterAdded:Wait()

local humanoid = character:WaitForChild("Humanoid")


local function onAnimationPlayed(animationTrack)

	if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then

		local p = game.Players.LocalPlayer

		local Humanoid = p.Character:WaitForChild("Humanoid")


		for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do

			animTrack:Stop()

		end


		local AnimAnim = Instance.new("Animation")

		AnimAnim.AnimationId = "rbxassetid://18435303746"

		local Anim = Humanoid:LoadAnimation(AnimAnim)


		local startTime = 0


		Anim:Play()

		Anim:AdjustSpeed(0)

		Anim.TimePosition = startTime

		Anim:AdjustSpeed(1)
		task.wait(1.1)
		btn1.ToolName.Text = "v"
		btn2.ToolName.Text = "v"
		btn3.ToolName.Text = "v"
		btn4.ToolName.Text = "v"
	end

end

humanoid.AnimationPlayed:Connect(onAnimationPlayed)
--Table Flip
local animationId = 11365563255


local player = game.Players.LocalPlayer

local character = player.Character or player.CharacterAdded:Wait()

local humanoid = character:WaitForChild("Humanoid")


local function onAnimationPlayed(animationTrack)

	if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then

		local p = game.Players.LocalPlayer

		local Humanoid = p.Character:WaitForChild("Humanoid")


		for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do

			animTrack:Stop()

		end


		local AnimAnim = Instance.new("Animation")

		AnimAnim.AnimationId = "rbxassetid://16431491215"

		local Anim = Humanoid:LoadAnimation(AnimAnim)


		Anim:Play()

		Anim:AdjustSpeed(0)

		Anim:AdjustSpeed(0.05)

		task.wait(3)

		Anim:AdjustSpeed(0.3)

		task.wait(8)

	end

end

humanoid.AnimationPlayed:Connect(onAnimationPlayed)

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()

for _, descendant in ipairs(character:GetDescendants()) do
	if descendant:IsA("BodyVelocity") then
		descendant.Velocity = Vector3.new(descendant.Velocity.X, 0, descendant.Velocity.Z)
	end
end

--[[
local player = game.Players.LocalPlayer

local character = player.Character or player.CharacterAdded:Wait()

local humanoidRootPart = character:WaitForChild("HumanoidRootPart")


local function onBodyVelocityAdded(bodyVelocity)

	if bodyVelocity:IsA("BodyVelocity") then

		bodyVelocity.Velocity = Vector3.new(bodyVelocity.Velocity.X, 0, bodyVelocity.Velocity.Z)

	end

end


character.DescendantAdded:Connect(onBodyVelocityAdded)


for _, descendant in pairs(character:GetDescendants()) do

	onBodyVelocityAdded(descendant)

end


player.CharacterAdded:Connect(function(newCharacter)

	character = newCharacter

	humanoidRootPart = character:WaitForChild("HumanoidRootPart")

	character.DescendantAdded:Connect(onBodyVelocityAdded)



	for _, descendant in pairs(character:GetDescendants()) do

		onBodyVelocityAdded(descendant)

	end

end)
]]
